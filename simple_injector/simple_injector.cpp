// simple_injector.cpp : Defines the entry point for the console application.
//

// Injector.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include <stdio.h>
#include <Windows.h>
#include <iostream>
#include <atlbase.h>
#include <string>
#include <vector>
#include <algorithm>


int _tmain(int argc, _TCHAR* argv[])
{
	HANDLE hProcess = NULL;
	DWORD dwPID = 0;
	FARPROC loadLibrary = NULL;
	PWSTR pwszPara = NULL;
	char* dllPath = "mh_template.dll";
	
	printf("Podaj PID: "); 
	scanf_s("%ld", &dwPID);
	printf("Injecting DLL to PID: %ld", dwPID);
	hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, dwPID);
	Sleep(1000);
	loadLibrary = GetProcAddress(GetModuleHandle(L"Kernel32"), "LoadLibraryA");
	pwszPara = (PWSTR)VirtualAllocEx(hProcess, NULL, strlen(dllPath), MEM_COMMIT, PAGE_READWRITE);

	WriteProcessMemory(hProcess, pwszPara, dllPath, strlen(dllPath), NULL);

	HANDLE hThread = CreateRemoteThread(hProcess, NULL, 0, (LPTHREAD_START_ROUTINE)loadLibrary, pwszPara, 0, NULL);
	
	WaitForSingleObject(hThread, INFINITE);
	CloseHandle(hThread);
	VirtualFreeEx(hProcess, pwszPara, 0, MEM_RELEASE);

	CloseHandle(hProcess);

	return 0;
}

